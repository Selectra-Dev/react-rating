{"version":3,"file":"react-rating.umd.min.js","sources":["../src/utils/style.js","../src/RatingSymbol.js","../src/Rating.js","../src/utils/noop.js","../src/RatingAPILayer.js"],"sourcesContent":["var style = {\n  display: 'inline-block',\n  borderRadius: '50%',\n  border: '5px double white',\n  width: 30,\n  height: 30\n};\n\nexport default {\n  empty: {\n    ...style,\n    backgroundColor: '#ccc'\n  },\n  full: {\n    ...style,\n    backgroundColor: 'black'\n  },\n  placeholder: {\n    ...style,\n    backgroundColor: 'red'\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Return the corresponding React node for an icon.\nconst _iconNode = (icon) => {\n  // If it is already a React Element just return it.\n  if (React.isValidElement(icon)) {\n    return icon;\n  }\n  // If it is an object, try to use it as a CSS style object.\n  if (typeof icon === 'object' && icon !== null) {\n    return <span style={icon} />;\n  }\n  // If it is a string, use it as class names.\n  if (Object.prototype.toString.call(icon) === '[object String]') {\n    return <span className={icon} />;\n  }\n};\n\nclass RatingSymbol extends React.PureComponent {\n  render() {\n    const {\n      index,\n      inactiveIcon,\n      activeIcon,\n      percent,\n      direction,\n      readonly,\n      onClick,\n      onMouseMove,\n      onTouchEnd\n    } = this.props;\n    const backgroundNode = _iconNode(inactiveIcon);\n    const showbgIcon = percent < 100;\n    const bgIconContainerStyle = showbgIcon\n      ? {}\n      : {\n        visibility: 'hidden'\n      };\n    const iconNode = _iconNode(activeIcon);\n    const iconContainerStyle = {\n      display: 'inline-block',\n      position: 'absolute',\n      overflow: 'hidden',\n      top: 0,\n      [direction === 'rtl' ? 'right' : 'left']: 0,\n      width: `${percent}%`\n    };\n    const style = {\n      cursor: !readonly ? 'pointer' : 'not-allowed',\n      display: 'inline-block',\n      position: 'relative'\n    };\n\n    function handleMouseMove(e) {\n      if (onMouseMove) {\n        onMouseMove(index, e);\n      }\n    }\n\n    function handleMouseClick(e) {\n      if (onClick) {\n        // [Supporting both TouchEvent and MouseEvent](https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Supporting_both_TouchEvent_and_MouseEvent)\n        // We must prevent firing click event twice on touch devices.\n        e.preventDefault();\n        onClick(index, e);\n      }\n    }\n\n    function handleTouchEnd(e) {\n      if (onTouchEnd) {\n        onTouchEnd(index, e);\n      }\n    }\n\n    return (\n      <span\n        style={style}\n        onClick={handleMouseClick}\n        onMouseMove={handleMouseMove}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleTouchEnd}\n      >\n        <span style={bgIconContainerStyle}>\n          {backgroundNode}\n        </span>\n        <span style={iconContainerStyle}>\n          {iconNode}\n        </span>\n      </span>\n    );\n  }\n}\n\n// Define propTypes only in development. They will be void in production.\nRatingSymbol.propTypes = typeof __DEV__ !== 'undefined' && __DEV__ && {\n  index: PropTypes.number.isRequired,\n  readonly: PropTypes.bool.isRequired,\n  inactiveIcon: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.element\n  ]).isRequired,\n  activeIcon: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.element\n  ]).isRequired,\n  percent: PropTypes.number.isRequired,\n  direction: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func\n};\n\nexport default RatingSymbol;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Symbol from './RatingSymbol';\n\nclass Rating extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Indicates the value that is displayed to the user in the form of symbols.\n      // It can be either 0 (for no displayed symbols) or (0, end]\n      displayValue: this.props.value,\n      // Indicates if the user is currently hovering over the rating element\n      interacting: false\n    };\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n    this.symbolMouseMove = this.symbolMouseMove.bind(this);\n    this.symbolClick = this.symbolClick.bind(this);\n    this.symbolEnd = this.symbolEnd.bind(this);\n  }\n\n  // NOTE: This callback is a little bit fragile. Needs some \"care\" because\n  // it relies on brittle state kept with different props and state\n  // combinations to try to figure out from where we are coming, I mean, what\n  // caused this update.\n  componentDidUpdate(prevProps, prevState) {\n    // When hover ends, call this.props.onHover with no value.\n    if (prevState.interacting && !this.state.interacting) {\n      return this.props.onHover();\n    }\n\n    // When hover over.\n    // Hover in should only be emitted while we are hovering (interacting),\n    // unless we changed the value, usually originated by an onClick event.\n    // We do not want to emit a hover in event again on the clicked\n    // symbol.\n    if (this.state.interacting && prevProps.value == this.props.value) {\n      this.props.onHover(this.state.displayValue);\n    }\n\n    if (this.props.value !== prevProps.value) {\n      this.setState((prevState) => ({\n        displayValue: this.props.value\n      }));\n    }\n  }\n\n  symbolEnd(symbolIndex, event) {\n    // Do not raise the click event on quiet mode when a touch end is received.\n    // On quiet mode the touch end event only notifies that we have left the\n    // symbol. We wait for the actual click event to call the symbolClick.\n    // On not quiet mode we simulate the click event on touch end and we just\n    // prevent the real on click event to be raised.\n    // NOTE: I know how we manage click events on touch devices is a little bit\n    // weird because we do not notify the starting value that was clicked but\n    // the last (touched) value.\n    if (!this.props.quiet) {\n      this.symbolClick(symbolIndex, event);\n      event.preventDefault();\n    }\n    // On touch end we are \"leaving\" the symbol.\n    this.onMouseLeave();\n  }\n\n  symbolClick(symbolIndex, event) {\n    const value = this.calculateDisplayValue(symbolIndex, event);\n    this.props.onClick(value, event);\n  }\n\n  symbolMouseMove(symbolIndex, event) {\n    const value = this.calculateDisplayValue(symbolIndex, event);\n    // This call should cause an update only if the state changes.\n    // Mainly the first time the mouse enters and whenever the value changes.\n    // So DidComponentUpdate is NOT called for every mouse movement.\n    this.setState({\n      interacting: !this.props.readonly,\n      displayValue: value\n    });\n  }\n\n  onMouseLeave() {\n    this.setState({\n      displayValue: this.props.value,\n      interacting: false\n    });\n  }\n\n  calculateDisplayValue(symbolIndex, event) {\n    const percentage = this.calculateHoverPercentage(event);\n    // Get the closest top fraction.\n    const fraction = Math.ceil(percentage % 1 * this.props.fractions) / this.props.fractions;\n    // Truncate decimal trying to avoid float precission issues.\n    const precision = 10 ** 3;\n    const displayValue =\n      symbolIndex + (Math.floor(percentage) + Math.floor(fraction * precision) / precision);\n    // ensure the returned value is greater than 0 and lower than totalSymbols\n    return displayValue > 0 ? displayValue > this.props.totalSymbols ? this.props.totalSymbols : displayValue : 1 / this.props.fractions;\n  }\n\n  calculateHoverPercentage(event) {\n    const clientX = event.nativeEvent.type.indexOf(\"touch\") > -1\n      ? event.nativeEvent.type.indexOf(\"touchend\") > -1\n        ? event.changedTouches[0].clientX\n        : event.touches[0].clientX\n      : event.clientX;\n\n    const targetRect = event.target.getBoundingClientRect();\n    const delta = this.props.direction === 'rtl'\n      ? targetRect.right - clientX\n      : clientX - targetRect.left;\n\n    // Returning 0 if the delta is negative solves the flickering issue\n    return delta < 0 ? 0 : delta / targetRect.width;\n  }\n\n  render() {\n    const {\n      readonly,\n      quiet,\n      totalSymbols,\n      value,\n      placeholderValue,\n      direction,\n      emptySymbol,\n      fullSymbol,\n      placeholderSymbol,\n      className,\n      id,\n      style,\n      tabIndex\n    } = this.props;\n    const { displayValue, interacting } = this.state;\n    const symbolNodes = [];\n    const empty = [].concat(emptySymbol);\n    const full = [].concat(fullSymbol);\n    const placeholder = [].concat(placeholderSymbol);\n    const shouldDisplayPlaceholder =\n      placeholderValue !== 0 &&\n      value === 0 &&\n      !interacting;\n\n    // The value that will be used as base for calculating how to render the symbols\n    let renderedValue;\n    if (shouldDisplayPlaceholder) {\n      renderedValue = placeholderValue;\n    } else {\n      renderedValue = quiet ? value : displayValue;\n    }\n\n    // The amount of full symbols\n    const fullSymbols = Math.floor(renderedValue);\n\n    for (let i = 0; i < totalSymbols; i++) {\n      let percent;\n      // Calculate each symbol's fullness percentage\n      if (i - fullSymbols < 0) {\n        percent = 100;\n      } else if (i - fullSymbols === 0) {\n        percent = (renderedValue - i) * 100;\n      } else {\n        percent = 0;\n      }\n\n      symbolNodes.push(\n        <Symbol\n          key={i}\n          index={i}\n          readonly={readonly}\n          inactiveIcon={empty[i % empty.length]}\n          activeIcon={\n            shouldDisplayPlaceholder ? placeholder[i % full.length] : full[i % full.length]\n          }\n          percent={percent}\n          direction={direction}\n          {...(!readonly && {\n            onClick: this.symbolClick,\n            onMouseMove: this.symbolMouseMove,\n            onTouchMove: this.symbolMouseMove,\n            onTouchEnd: this.symbolEnd\n          })}\n        />\n      );\n    }\n\n    return (\n      <span\n        id={id}\n        style={{...style, display: 'inline-block', direction }}\n        className={className}\n        tabIndex={tabIndex}\n        aria-label={this.props['aria-label']}\n        {...(!readonly && {\n          onMouseLeave: this.onMouseLeave\n        })}\n      >\n        {symbolNodes}\n      </span>\n    );\n  }\n}\n\n// Define propTypes only in development.\nRating.propTypes = typeof __DEV__ !== 'undefined' && __DEV__ && {\n  totalSymbols: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired, // Always >= 0\n  placeholderValue: PropTypes.number.isRequired,\n  readonly: PropTypes.bool.isRequired,\n  quiet: PropTypes.bool.isRequired,\n  fractions: PropTypes.number.isRequired,\n  direction: PropTypes.string.isRequired,\n  emptySymbol: PropTypes.oneOfType([\n    // Array of class names and/or style objects.\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\n    // Class names.\n    PropTypes.string,\n    // Style objects.\n    PropTypes.object,\n    // React element\n    PropTypes.element\n  ]).isRequired,\n  fullSymbol: PropTypes.oneOfType([\n    // Array of class names and/or style objects.\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\n    // Class names.\n    PropTypes.string,\n    // Style objects.\n    PropTypes.object,\n    // React element\n    PropTypes.element\n  ]).isRequired,\n  placeholderSymbol: PropTypes.oneOfType([\n    // Array of class names and/or style objects.\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\n    // Class names.\n    PropTypes.string,\n    // Style objects.\n    PropTypes.object,\n    // React element\n    PropTypes.element\n  ]),\n  onClick: PropTypes.func.isRequired,\n  onHover: PropTypes.func.isRequired\n};\n\nexport default Rating;\n","function noop() {}\nnoop._name = 'react_rating_noop';\n\nexport default noop;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Style from './utils/style';\nimport Rating from './Rating';\nimport noop from './utils/noop';\n\nclass RatingAPILayer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.initialRating\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleHover = this.handleHover.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.value === prevState.value && prevProps.initialRating !== this.state.value) {\n      this.setState({\n        value: this.props.initialRating\n      });\n    }\n  }\n\n  handleClick(value, e) {\n    const newValue = this.translateDisplayValueToValue(value);\n    this.props.onClick(newValue);\n    // Avoid calling setState if not necessary. Micro optimisation.\n    if (this.state.value !== newValue) {\n      // If we have a new value trigger onChange callback.\n      this.setState({\n        value: newValue\n      }, () => this.props.onChange(this.state.value));\n    }\n  }\n\n  handleHover(displayValue) {\n    const value = displayValue === undefined\n      ? displayValue\n      : this.translateDisplayValueToValue(displayValue);\n    this.props.onHover(value);\n  }\n\n  translateDisplayValueToValue(displayValue) {\n    const translatedValue = displayValue * this.props.step + this.props.start;\n    // minimum value cannot be equal to start, since it's exclusive\n    return translatedValue === this.props.start\n      ? translatedValue + 1 / this.props.fractions\n      : translatedValue;\n  }\n\n  tranlateValueToDisplayValue(value) {\n    if (value === undefined) {\n      return 0;\n    }\n    return (value - this.props.start) / this.props.step;\n  }\n\n  render() {\n    const {\n      step,\n      emptySymbol,\n      fullSymbol,\n      placeholderSymbol,\n      readonly,\n      quiet,\n      fractions,\n      direction,\n      start,\n      stop,\n      id,\n      className,\n      style,\n      tabIndex\n    } = this.props;\n\n    function calculateTotalSymbols(start, stop, step) {\n      return Math.floor((stop - start) / step);\n    }\n\n    return (\n      <Rating\n        id={id}\n        style={style}\n        className={className}\n        tabIndex={tabIndex}\n        aria-label={this.props['aria-label']}\n        totalSymbols={calculateTotalSymbols(start, stop, step)}\n        value={this.tranlateValueToDisplayValue(this.state.value)}\n        placeholderValue={this.tranlateValueToDisplayValue(this.props.placeholderRating)}\n        readonly={readonly}\n        quiet={quiet}\n        fractions={fractions}\n        direction={direction}\n        emptySymbol={emptySymbol}\n        fullSymbol={fullSymbol}\n        placeholderSymbol={placeholderSymbol}\n        onClick={this.handleClick}\n        onHover={this.handleHover}\n      />\n    );\n  }\n}\n\nRatingAPILayer.defaultProps = {\n  start: 0,\n  stop: 5,\n  step: 1,\n  readonly: false,\n  quiet: false,\n  fractions: 1,\n  direction: 'ltr',\n  onHover: noop,\n  onClick: noop,\n  onChange: noop,\n  emptySymbol: Style.empty,\n  fullSymbol: Style.full,\n  placeholderSymbol: Style.placeholder\n};\n\n// Define propTypes only in development.\nRatingAPILayer.propTypes = typeof __DEV__ !== 'undefined' && __DEV__ && {\n  start: PropTypes.number,\n  stop: PropTypes.number,\n  step: PropTypes.number,\n  initialRating: PropTypes.number,\n  placeholderRating: PropTypes.number,\n  readonly: PropTypes.bool,\n  quiet: PropTypes.bool,\n  fractions: PropTypes.number,\n  direction: PropTypes.string,\n  emptySymbol: PropTypes.oneOfType([\n    // Array of class names and/or style objects.\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\n    // Class names.\n    PropTypes.string,\n    // Style objects.\n    PropTypes.object,\n    // React element\n    PropTypes.element\n  ]),\n  fullSymbol: PropTypes.oneOfType([\n    // Array of class names and/or style objects.\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\n    // Class names.\n    PropTypes.string,\n    // Style objects.\n    PropTypes.object,\n    // React element\n    PropTypes.element\n  ]),\n  placeholderSymbol: PropTypes.oneOfType([\n    // Array of class names and/or style objects.\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\n    // Class names.\n    PropTypes.string,\n    // Style objects.\n    PropTypes.object,\n    // React element\n    PropTypes.element\n  ]),\n  onHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onChange: PropTypes.func\n};\n\nexport default RatingAPILayer;\n"],"names":["style","display","borderRadius","border","width","height","empty","backgroundColor","full","placeholder","_iconNode","icon","React","isValidElement","_typeof","Object","prototype","toString","call","className","RatingSymbol","PureComponent","this","props","index","inactiveIcon","activeIcon","percent","direction","readonly","onClick","onMouseMove","onTouchEnd","backgroundNode","bgIconContainerStyle","visibility","iconNode","iconContainerStyle","position","overflow","top","cursor","handleMouseMove","e","preventDefault","onTouchMove","Rating","state","displayValue","_this","value","interacting","onMouseLeave","bind","symbolMouseMove","symbolClick","symbolEnd","prevProps","prevState","onHover","setState","_this2","symbolIndex","event","quiet","calculateDisplayValue","percentage","calculateHoverPercentage","fraction","Math","ceil","fractions","precision","floor","totalSymbols","clientX","nativeEvent","type","indexOf","changedTouches","touches","targetRect","target","getBoundingClientRect","delta","right","left","renderedValue","placeholderValue","emptySymbol","fullSymbol","placeholderSymbol","id","tabIndex","symbolNodes","concat","shouldDisplayPlaceholder","fullSymbols","i","push","_Symbol","key","length","noop","_name","RatingAPILayer","initialRating","handleClick","handleHover","newValue","translateDisplayValueToValue","onChange","undefined","translatedValue","step","start","stop","calculateTotalSymbols","tranlateValueToDisplayValue","placeholderRating","defaultProps","Style"],"mappings":"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"}